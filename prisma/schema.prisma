// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Images {
  id   String @id @default(uuid())
  name String
  url  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum InviteStatus {
  CONFIRMED
  REJECTED
}

model InviteConfirmation {
  id    String @id @default(uuid())
  name  String
  phone String
  email String

  status       InviteStatus?
  familyNumber Int           @default(1)

  message String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PageAnalytics {
  id        String   @id @default(uuid())
  page      String // e.g., "home", "dashboard", "confirmation"
  ipAddress String?
  userAgent String?
  referrer  String?
  createdAt DateTime @default(now())
}

model GiftCategory {
  id        String   @id @default(uuid())
  name      String
  color     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  gifts Gift[]
}

model Gift {
  id          String   @id @default(uuid())
  name        String
  image       String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  categoryId String
  category   GiftCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}
